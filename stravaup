#!/bin/sh
#
# Command line interface for uploading to Strava.com
#
# See instructions at https://github.com/mpolla/stravaup
#
# Motivated by https://ironvet.wordpress.com/2014/05/28/how-to-automate-a-garmin-910xt-and-strava-with-linux/
# See Strava API docs at https://strava.github.io/api/
#
# Matti Pöllä <mpo@iki.fi>

set -e

if [ ! -f "${HOME}/.stravauprc" ]; then
    echo "To use the stravaup script, please to to https://www.strava.com/settings/api"
    echo "and register your own application to get a client id. Then create a file ~/.stravauprc containing"
    echo "  STRAVAUP_CLIENT_ID = [insert your own]"
    echo "  STRAVAUP_CLIENT_SECRET = [insert your own]"
    exit
fi
source "${HOME}/.stravauprc"

if [ $# -ne 1 ]; then
    echo "Usage: stravaup file"
    exit 1
fi

# Check file type
filename=$(basename "$1")
suffix="${filename#*.}"
datatype=""
if [ "$suffix" = "fit" ]; then
    datatype="$suffix"
fi
if [ "$suffix" = "tcx" ]; then
    datatype="$suffix"
fi
if [ "$suffix" = "gpx" ]; then
    datatype="$suffix"
fi
if [ "$suffix" = "fit.gz" ]; then
    datatype="$suffix"
fi
if [ "$suffix" = "tcx.gz" ]; then
    datatype="$suffix"
fi
if [ "$suffix" = "gpx.gz" ]; then
    datatype="$suffix"
fi
if [ "$datatype" = "" ]; then
    echo "Unknown file type $suffix"
    exit 1
fi

# Test whether file exists
if [ ! -f "$1" ]; then
    echo "$1: no such file exists!"
    exit
fi

# Get authorization code
if [ "$STRAVAUP_CODE" = "" ]; then
    echo "Please open the following URL in a browser"
    echo -n "https://www.strava.com/oauth/authorize?client_id="
    echo -n "$STRAVAUP_CLIENT_ID"
    echo "&response_type=code&redirect_uri=http://localhost:8080/capture&approval_prompt=force&scope=activity:write"
    echo "Select 'Authorize' to provide this script with the required authorization code."
    STRAVAUP_CODE=$(python3 $(dirname $0)/server.py)
    if [ -z "$STRAVAUP_CODE" ] ; then
        echo "Unable to obtain authorization code" 1>&2
        exit 1
    fi
    echo "STRAVAUP_CODE=$STRAVAUP_CODE" >> ${HOME}/.stravauprc
fi

# Get auth token
# If needed, get refresh token
if [ "$STRAVAUP_REFRESH_TOKEN" = "" ]; then
    echo "Exchanging authorization token for refresh token..."
    STRAVAUP_REFRESH_TOKEN=$(curl -s -X POST https://www.strava.com/oauth/token -F client_id="$STRAVAUP_CLIENT_ID" -F client_secret="$STRAVAUP_CLIENT_SECRET" -F code="$STRAVAUP_CODE" -F grant_type=authorization_code | cut -d':' -f5 | cut -d',' -f1 | sed -e 's/[^a-z0-9]//g')
    echo "STRAVAUP_REFRESH_TOKEN=$STRAVAUP_REFRESH_TOKEN" >> ${HOME}/.stravauprc
fi

echo "Getting auth token..."
TOKEN=$(curl -s -X POST https://www.strava.com/oauth/token -F client_id="$STRAVAUP_CLIENT_ID" -F client_secret="$STRAVAUP_CLIENT_SECRET" -F grant_type=refresh_token -F refresh_token="$STRAVAUP_REFRESH_TOKEN" | grep access_token | cut -d':' -f3 | cut -d',' -f1 | sed -e 's/[^a-z0-9]//g')

if [ "$TOKEN" = "" ]; then
    echo "Unable to get auth token. Consider deleting STRAVAUP_REFRESH_TOKEN." 1>&2
    exit 1
fi

# Upload file
echo "Uploading file..."
curl -X POST https://www.strava.com/api/v3/uploads -H "Authorization: Bearer $TOKEN" -F file=@"$1" -F data_type="$datatype"
